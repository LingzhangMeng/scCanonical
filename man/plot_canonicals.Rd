% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scCanonical.R
\name{plot_canonicals}
\alias{plot_canonicals}
\title{Plot Canonical Markers for Clusters}
\usage{
plot_canonicals(cons_joined, canonical, custom_colors)
}
\arguments{
\item{cons_joined}{A data frame containing differential expression results for
all genes, with columns \code{delta_pct}, \code{spec_score}, and \code{cluster}.}

\item{canonical}{A data frame containing canonical marker genes, with columns
\code{delta_pct}, \code{spec_score}, \code{gene}, and \code{cluster}.}

\item{custom_colors}{A named vector of colors for each cluster, used for
coloring points and labels in the plot.}
}
\value{
A \code{ggplot} object representing the faceted scatter plot of canonical
markers, which is also printed to the active graphics device.
}
\description{
This function generates a faceted scatter plot of canonical markers for each
cluster, displaying the difference in expression percentage (\code{delta_pct}) on
the x-axis and specificity score (\code{spec_score}) on the y-axis. Canonical
markers are highlighted with distinct colors and labeled, while non-canonical
markers are shown in the background.
}
\details{
The function creates a scatter plot using \code{ggplot2}, with background points for
all genes in \code{cons_joined} and highlighted points for canonical markers in
\code{canonical}. Points are colored by cluster, and gene labels are added for
canonical markers using \code{geom_text_repel} to avoid overlap. The plot is faceted
by cluster with free y-axis scales. Custom y-axis breaks are calculated for each
cluster, and a "-" marker is added at the left border of each facet panel to
indicate these breaks. The plot uses a minimal theme with customized aesthetics
for clarity and readability.
}
\examples{
\dontrun{
# Example data
cons_joined <- data.frame(
  delta_pct = runif(100, -0.5, 0.5),
  spec_score = runif(100, 0, 2),
  cluster = rep(1:4, each = 25)
)
canonical <- data.frame(
  delta_pct = runif(10, 0, 0.5),
  spec_score = runif(10, 1, 2),
  gene = paste0("Gene", 1:10),
  cluster = rep(1:4, length.out = 10)
)
custom_colors <- c("1" = "red", "2" = "blue", "3" = "green", "4" = "purple")

# Generate plot
plot_canonicals(cons_joined, canonical, custom_colors)
}

}
